{"version":3,"sources":["Components/FormInput/FormInput.module.css","Components/Signup/Signup.module.css","Components/FormInput/FormInput.js","UI/messageModal/messageModal.js","Components/Signup/Signup.js","App.js","serviceWorker.js","index.js","UI/messageModal/messageModal.module.css"],"names":["module","exports","formInput","handleChange","label","validity","message","touched","otherProps","cssClasses","classes","FormInput","Input","pop","push","Invalid","className","Group","Label","join","onChange","messageModal","onClose","children","Backdrop","onClick","MessageModal","Actions","type","Signup","checkAllValidity","inputData","isValid","inputField","valid","checkValidity","validationRules","value","updatedHttpData","state","httpRequest","required","trim","minLength","length","pattern","test","axios","post","then","response","data","status","openModal","setState","catch","error","console","log","handleHttpRequest","e","preventDefault","firstName","lastName","email","password","closeMessageModal","updateHttpRequest","comparePasswords","confirmPassword","event","target","name","updatedData","updatedField","validation","allValid","this","Title","onSubmit","handleSubmit","Form","placeholder","SignupButton","disabled","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f77dd17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Group\":\"FormInput_Group__6S32A\",\"Label\":\"FormInput_Label__3brQ2\",\"FormInput\":\"FormInput_FormInput__3ILyj\",\"Input\":\"FormInput_Input__KJdO6\",\"Invalid\":\"FormInput_Invalid__37Z4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__NlDi2\",\"Title\":\"Signup_Title__5DYuy\",\"Form\":\"Signup_Form__3vBHC\",\"SignupButton\":\"Signup_SignupButton__1oLub\"};","import React from 'react';\nimport classes from './FormInput.module.css';\n\nconst formInput = ({ handleChange, label, validity, message, touched, ...otherProps }) => {\n  const cssClasses = [classes.FormInput, classes.Input];\n  if (!validity && touched) {\n    cssClasses.pop();\n    cssClasses.push(classes.Invalid);\n  }\n\n  return (\n    <div className={classes.Group}>\n      <label className={classes.Label}>{label}</label>\n      {message ? <small>{message}</small> : null}\n      <input className={cssClasses.join(' ')} onChange={handleChange} {...otherProps} />\n    </div>\n  );\n}\n\nexport default formInput;\n","import React from 'react';\nimport classes from './messageModal.module.css';\n\nconst messageModal = ({ onClose, children }) => {\n  return (\n    <>\n      <div className={classes.Backdrop} onClick={onClose} />\n      <div className={classes.MessageModal}>\n        <h2>An Error Occurred!</h2>\n        <p>{children}</p>\n        <div className={classes.Actions}>\n          <button type=\"button\" onClick={onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default messageModal;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport FormInput from '../FormInput/FormInput';\nimport MessageModal from '../../UI/messageModal/messageModal';\nimport classes from './Signup.module.css';\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        firstName: {\n          value: '',\n          validation: {\n            required: true,\n            minLength: 3,\n          },\n          message: 'Must have at least 3 characters',\n          valid: false,\n          touched: false,\n        },\n        lastName: {\n          value: '',\n          validation: {\n            required: true,\n            minLength: 3,\n          },\n          message: 'Must have at least 3 characters',\n          valid: false,\n          touched: false,\n        },\n        email: {\n          value: '',\n          validation: {\n            required: true,\n            pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n          },\n          message: 'Enter valid email',\n          valid: false,\n          touched: false,\n        },\n        password: {\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6,\n          },\n          message: 'Must have at least 6 characters',\n          valid: false,\n          touched: false,\n        },\n        confirmPassword: {\n          value: '',\n          valid: false,\n        },\n      },\n      allValid: true,\n      httpRequest: {\n        message: '',\n        openModal: false,\n      }\n    }\n  }\n\n  checkAllValidity = (inputData) => {\n    let isValid = true;\n    for (let inputField in inputData) {\n      isValid = inputData[inputField].valid && isValid;\n    }\n    return isValid;\n  }\n\n  checkValidity = (validationRules, value) => {\n    let isValid = true;\n    let updatedHttpData = {\n      ...this.state.httpRequest\n    }\n    if (!validationRules) {\n      return true;\n    } else {\n      if (validationRules.required) {\n        isValid = value.trim() !== '' && isValid;\n      }\n      if (validationRules.minLength) {\n        isValid = value.length >= validationRules.minLength && isValid;\n      }\n      if (validationRules.pattern) {\n        isValid = (validationRules.pattern.test(value)) && isValid;\n        if (isValid === true) {\n          axios.post('https://api.raisely.com/v3/check-user', {\n            \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\n            \"data\": {\n              \"email\": value,\n            }\n          }).then(\n            response => {\n              if (response.data.data.status === 'EXISTS') {\n                updatedHttpData.message = \"Email exists. Select another one\";\n                updatedHttpData.openModal = true;\n                this.setState({ httpRequest: updatedHttpData });\n                return false;\n              }\n            }\n          ).catch(\n            error => {\n              console.log(error);\n            }\n          )\n        }\n      }\n    }\n    return isValid;\n  }\n\n  handleHttpRequest = (e) => {\n    e.preventDefault();\n    const { firstName, lastName, email, password } = this.state.data;\n    let updatedHttpData = {\n      ...this.state.httpRequest\n    }\n    axios.post('https://api.raisely.com/v3/signup', {\n      \"campaignUuid\": \"46aa3270-d2ee-11ea-a9f0-e9a68ccff42a\",\n      \"data\": {\n        \"firstName\": firstName.value,\n        \"lastName\": lastName.value,\n        \"email\": email.value,\n        \"password\": password.value\n      }\n    }).then(\n      response => {\n        updatedHttpData.message = \"Welcome to Raisely\";\n        updatedHttpData.openModal = true;\n        this.setState({ httpRequest: updatedHttpData });\n      }\n    ).catch(\n      error => {\n        updatedHttpData.message = \"Something went wrong. Try again\";\n        updatedHttpData.openModal = true;\n        this.setState({ httpRequest: updatedHttpData });\n      });\n  }\n\n  closeMessageModal = () => {\n    const updateHttpRequest = {\n      ...this.state.httpRequest\n    };\n    updateHttpRequest.openModal = false;\n    this.setState({ httpRequest: updateHttpRequest });\n  }\n\n  comparePasswords = (confirmPassword, password) => {\n    return confirmPassword === password ? true : false;\n  }\n\n  handleChange = event => {\n    const { password } = this.state.data;\n    const { value, name } = event.target;\n    const updatedData = {\n      ...this.state.data\n    };\n    const updatedField = {\n      ...updatedData[name]\n    };\n    updatedField.value = value;\n    updatedField.touched = true;\n    if (name === 'confirmPassword') {\n      updatedField.valid = this.comparePasswords(value, password.value);\n    } else {\n      updatedField.valid = this.checkValidity(updatedField.validation, value);\n    }\n\n    updatedData[name] = updatedField;\n    this.setState({ data: updatedData, allValid: this.checkAllValidity(updatedData) });\n  }\n\n  render() {\n    const {\n      firstName, lastName, email, password, confirmPassword,\n    } = this.state.data;\n    const { allValid, httpRequest } = this.state;\n    return (\n      <div className={classes.Signup}>\n        {httpRequest.openModal && <MessageModal onClose={this.closeMessageModal}>{httpRequest.message}</MessageModal>}\n        <h2 className={classes.Title}>Create your account with us.</h2>\n        <span>Signup to get access</span>\n        <form onSubmit={this.handleSubmit} className={classes.Form}>\n          <FormInput\n            type=\"text\"\n            name=\"firstName\"\n            label=\"First Name:\"\n            value={firstName.value}\n            handleChange={this.handleChange}\n            placeholder='First name'\n            message={firstName.message}\n            validity={firstName.valid}\n            touched={firstName.touched}\n            required\n          />\n          <FormInput\n            type=\"text\"\n            name=\"lastName\"\n            label=\"Last Name:\"\n            value={lastName.value}\n            handleChange={this.handleChange}\n            placeholder='Last name'\n            message={lastName.message}\n            validity={lastName.valid}\n            touched={lastName.touched}\n            required\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            label=\"Email:\"\n            value={email.value}\n            handleChange={this.handleChange}\n            placeholder='Email please'\n            message={email.message}\n            validity={email.valid}\n            touched={email.touched}\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            label=\"Password:\"\n            value={password.value}\n            handleChange={this.handleChange}\n            placeholder='Enter password'\n            message={password.message}\n            validity={password.valid}\n            touched={password.touched}\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            label=\"Confirm password:\"\n            value={confirmPassword.value}\n            handleChange={this.handleChange}\n            placeholder='Confirm password'\n            validity={confirmPassword.valid}\n            touched={confirmPassword.touched}\n            required\n          />\n          <button\n            type=\"submit\"\n            className={classes.SignupButton}\n            disabled={!allValid}\n            onClick={this.handleHttpRequest}\n          >\n            Sign up\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport Signup from './Components/Signup/Signup';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Signup />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageModal\":\"messageModal_MessageModal__2pP-0\",\"Actions\":\"messageModal_Actions__2IxKT\",\"Backdrop\":\"messageModal_Backdrop__R535i\"};"],"sourceRoot":""}